<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="0" failures="1" skipped="0" tests="1" time="116.090" timestamp="2025-06-24T18:32:19.349365+05:30" hostname="PSDLAP373"><testcase classname="tests.hello_test" name="test" time="108.774"><failure message="OSError: pytest: reading from stdin while output is captured!  Consider using `-s`.">@pytest.mark.ui
    def test():
        base = BaseTest()
        driver = base.driver
        actions = base.actions
        try:
            Interactions.wait_and_click(driver, By.XPATH, "//div[@aria-label='Modules']")
    # Clicking navigation: Procurement and sourcing
            Interactions.wait_and_click(driver, By.XPATH, "//a[@data-dyn-title='Procurement and sourcing']")
    # Clicking navigation: Vendors
            Interactions.wait_and_click(driver, By.XPATH, "//a[@data-dyn-title='Vendors']")
    # Clicking navigation: All vendors
            Interactions.wait_and_click(driver, By.XPATH, "//a[@data-dyn-title='All vendors']")
    # Clicking button: Grid
            user_input = input("Press data to select: ")
            Interactions.scroll_and_click_row(driver, By.XPATH, "//div[contains(@class,'fixedDataTableRowLayout_')]/ancestor::div[@role='grid']", f"//input[@value='{user_input}']")
            Interactions.press_enter(driver, By.XPATH, "//input[@value='"+user_input+"']")
    # Clicking (default) on: VendorTab
            time.sleep(3)
            Interactions.wait_and_click(driver, By.XPATH, "//button/parent::div[@data-dyn-controlname='VendorTab']")
            if(Interactions.check_element_exist(driver, By.XPATH, "//button[@name='EditAddress']")):
                Interactions.wait_and_click(driver, By.XPATH, "//button[@name='EditAddress']")
            elif(Interactions.check_element_exist(driver, By.XPATH, "//button[@data-dyn-controlname='EditAddress']")):
                Interactions.wait_and_click(driver, By.XPATH, "//button[@data-dyn-controlname='EditAddress']")
            elif(Interactions.check_element_exist(driver, By.XPATH, "//button[@aria-label='Edit']")):
                Interactions.wait_and_click(driver, By.XPATH, "//button[@aria-label='Edit']")
            else:
                Interactions.wait_and_click(driver, By.XPATH, "//div[@data-dyn-controlname='ActionPane']//div[@class='appBar-toolbar']//div[@data-dyn-role='OverflowButton']")
                if(Interactions.check_element_exist(driver, By.XPATH, "//div[@class='overflow-menu sysPopup allowFlyoutClickPropagation']//button[@name='EditAddress']")):
                    Interactions.wait_and_click(driver, By.XPATH, "//div[@class='overflow-menu sysPopup allowFlyoutClickPropagation']//button[@name='EditAddress']")
                elif(Interactions.check_element_exist(driver, By.XPATH, "//div[@class='overflow-menu sysPopup allowFlyoutClickPropagation']//button[@aria-label='Edit']")):
                    Interactions.wait_and_click(driver, By.XPATH, "//div[@class='overflow-menu sysPopup allowFlyoutClickPropagation']//button[@aria-label='Edit']")
    # Inputting into: LogisticsPostalAddress_Street
            if(Interactions.check_element_exist(driver, By.XPATH, "//textarea[@name='LogisticsPostalAddress_Street']")):
                Interactions.wait_and_send_keys(driver, By.XPATH, "//textarea[@name='LogisticsPostalAddress_Street']", "711 Louisiana demo address")
    # Inputting into: Details_Description
            if(Interactions.check_input_ancestor_is_table(driver, By.XPATH, "//input[contains(@name,'Details_Description')]") or Interactions.check_input_ancestor_is_table(driver, By.XPATH, "//input[contains(@aria-label,'Name or description')]") ):
                #clicking inside grid: Details_Description
                if(Interactions.check_element_exist(driver, By.XPATH, "(//input[contains(@name,'Details_Description')])[1]")):
                    actions.move_to_element(driver.find_element(By.XPATH,"//input[contains(@name,'Details_Description')]")).perform()
                    Interactions.clear_input_field_and_send_keys(driver, By.XPATH, "(//input[contains(@name,'Details_Description')])[1]", "Acme Office")
                elif(Interactions.check_element_exist(driver, By.XPATH, "(//input[contains(@aria-label,'Name or description')])[1]")):
                    actions.move_to_element(driver.find_element(By.XPATH, "//input[contains(@aria-label,'Name or description')]")).perform()
                    Interactions.clear_input_field_and_send_keys(driver, By.XPATH, "(//input[contains(@aria-label,'Name or description')])[1]", "Acme Office")
            else:
                if(Interactions.check_element_exist(driver, By.XPATH, "//input[contains(@name,'Details_Description')]")):
                    Interactions.clear_input_field_and_send_keys(driver, By.XPATH, "//input[contains(@name,'Details_Description')]", "Acme Office")
                elif(Interactions.check_element_exist(driver, By.XPATH, "//input[contains(@aria-label,'Name or description')]")):
                    Interactions.clear_input_field_and_send_keys(driver, By.XPATH, "//input[contains(@aria-label,'Name or description')]", "Acme Office")
            Interactions.press_enter(driver, By.XPATH, "//body")
            if(Interactions.check_element_exist(driver, By.XPATH, "//button[@name='OKButton']")):
                Interactions.wait_and_click(driver, By.XPATH, "//button[@name='OKButton']")
            elif(Interactions.check_element_exist(driver, By.XPATH, "//button[@data-dyn-controlname='OKButton']")):
                Interactions.wait_and_click(driver, By.XPATH, "//button[@data-dyn-controlname='OKButton']")
    # going to edit view mode
            Interactions.click_back_button(driver, By.XPATH, "//button[@data-dyn-controlname='SystemDefinedViewEditButton']")
            time.sleep(1)
    # Clicking checkbox: Tax10991_Tax1099Reports
            if(Interactions.check_element_exist(driver, By.XPATH, "//label[contains(text(),'Report 1099')]/following-sibling::div/span[1]")):
                Interactions.check_if_checkbox_is_checked(driver, By.XPATH, "//label[contains(text(),'Report 1099')]/following-sibling::div/span[1]", False)
                Interactions.wait_and_click(driver, By.XPATH, "//label[contains(text(),'Report 1099')]/following-sibling::div/span[1]")
            elif(Interactions.check_element_exist(driver, By.XPATH, "//span[contains(@id, 'Tax10991_Tax1099Reports') and (@class='toggle-box' or @class='checkBox')]")):
                if Interactions.check_if_checkbox_is_checked(driver, By.XPATH, "//span[contains(@id, 'Tax10991_Tax1099Reports') and (@class='toggle-box' or @class='checkBox')]", False) == False:
                    Interactions.wait_and_click(driver, By.XPATH, "//span[contains(@id, 'Tax10991_Tax1099Reports') and (@class='toggle-box' or @class='checkBox')]")
            elif(Interactions.check_element_exist(driver, By.XPATH, "//div[@aria-label='Report 1099']//span")):
                if Interactions.check_if_checkbox_is_checked(driver, By.XPATH, "//div[@aria-label='Report 1099']//span", False) == False:
                    Interactions.wait_and_click(driver, By.XPATH, "//div[@aria-label='Report 1099']//span")
            Interactions.wait_and_click(driver, By.XPATH, "//button[@name='SystemDefinedSaveButton']")
            if(Interactions.check_element_exist(driver, By.XPATH, "//button[@name='OnHoldDropDialogButton']")):
                Interactions.wait_and_click(driver, By.XPATH, "//button[@name='OnHoldDropDialogButton']")
            elif(Interactions.check_element_exist(driver, By.XPATH, "//button[@data-dyn-controlname='OnHoldDropDialogButton']")):
                Interactions.wait_and_click(driver, By.XPATH, "//button[@data-dyn-controlname='OnHoldDropDialogButton']")
            elif(Interactions.check_element_exist(driver, By.XPATH, "//button[@aria-label='On hold']")):
                Interactions.wait_and_click(driver, By.XPATH, "//button[@aria-label='On hold']")
            else:
                Interactions.wait_and_click(driver, By.XPATH, "//div[@data-dyn-controlname='ActionPane']//div[@class='appBar-toolbar']//div[@data-dyn-role='OverflowButton']")
                if(Interactions.check_element_exist(driver, By.XPATH, "//div[@class='overflow-menu sysPopup allowFlyoutClickPropagation']//button[@name='OnHoldDropDialogButton']")):
                    Interactions.wait_and_click(driver, By.XPATH, "//div[@class='overflow-menu sysPopup allowFlyoutClickPropagation']//button[@name='OnHoldDropDialogButton']")
                elif(Interactions.check_element_exist(driver, By.XPATH, "//div[@class='overflow-menu sysPopup allowFlyoutClickPropagation']//button[@aria-label='On hold']")):
                    Interactions.wait_and_click(driver, By.XPATH, "//div[@class='overflow-menu sysPopup allowFlyoutClickPropagation']//button[@aria-label='On hold']")
    # Clicking combobox: OnHold
            combox_box_to_click = None
            if Interactions.check_element_exist(driver, By.XPATH, "//input[@name='OnHold']/following-sibling::div"):
                combox_box_to_click = "//input[@name='OnHold']/following-sibling::div"
            elif Interactions.check_element_exist(driver, By.XPATH, "//input[@aria-label='Vendor hold']/following-sibling::div"):
                combox_box_to_click = "//input[@aria-label='Vendor hold']/following-sibling::div"
            elif Interactions.check_element_exist(driver, By.XPATH, "//input[@name='OnHold']/parent::div/following-sibling::div/div"):
                combox_box_to_click = "//input[@name='OnHold']/parent::div/following-sibling::div/div"
            Interactions.wait_and_click(driver, By.XPATH, combox_box_to_click)
            if Interactions.check_element_exist(driver, By.XPATH, "//ul[contains(@aria-labelledby, 'OnHold')]//li[@data-dyn-index='1']"):
                Interactions.wait_and_click(driver, By.XPATH, "//ul[contains(@aria-labelledby, 'OnHold')]//li[@data-dyn-index='1']")
            elif Interactions.check_element_exist(driver, By.XPATH, "//ul[contains(@id,'OnHold')]//li[1]"):
                Interactions.wait_and_click(driver, By.XPATH, "//ul[contains(@id,'OnHold')]//li[1]")
            else:
                if Interactions.check_element_exist(driver, By.XPATH, "//ul[contains(@aria-labelledby, 'OnHold')]"):
                    cliked_or_not = Interactions.scroll_and_click_dropdown_item(driver, "//ul[contains(@aria-labelledby, 'OnHold')]",By.XPATH, "//ul[contains(@aria-labelledby, 'OnHold')]//li[@data-dyn-index='1']")
                    if cliked_or_not == False:
                        Interactions.scroll_and_click_dropdown_item(driver, "//ul[contains(@aria-labelledby, 'OnHold')]",By.XPATH, "//ul[contains(@id,'OnHold')]//li[1]")
                elif Interactions.check_element_exist(driver, By.XPATH, "//ul[contains(@id, 'OnHold')]"):
                    cliked_or_not = Interactions.scroll_and_click_dropdown_item(driver, "//ul[contains(@id, 'OnHold')]",By.XPATH, "//ul[contains(@aria-labelledby, 'OnHold')]//li[@data-dyn-index='1']")
                    if cliked_or_not == False:
                        Interactions.scroll_and_click_dropdown_item(driver, "//ul[contains(@id, 'OnHold')]",By.XPATH, "//ul[contains(@id,'OnHold')]//li[1]")
            if(Interactions.check_element_exist(driver, By.XPATH, "//button[@name='CommandButtonOK']")):
                Interactions.wait_and_click(driver, By.XPATH, "//button[@name='CommandButtonOK']")
            elif(Interactions.check_element_exist(driver, By.XPATH, "//button[@data-dyn-controlname='CommandButtonOK']")):
                Interactions.wait_and_click(driver, By.XPATH, "//button[@data-dyn-controlname='CommandButtonOK']")
    # Closing the page
            Interactions.click_back_button(driver, By.XPATH, "//button[@data-dyn-controlname='SystemDefinedCloseButton']")
            time.sleep(1)
            Interactions.wait_and_click(driver, By.XPATH, "//div[@aria-label='Modules']")
    # Clicking navigation: Procurement and sourcing
            Interactions.wait_and_click(driver, By.XPATH, "//a[@data-dyn-title='Procurement and sourcing']")
    # Clicking navigation: Purchase orders
            Interactions.wait_and_click(driver, By.XPATH, "//a[@data-dyn-title='Purchase orders']")
    # Clicking navigation: All purchase orders
            Interactions.wait_and_click(driver, By.XPATH, "//a[@data-dyn-title='All purchase orders']")
            if(Interactions.check_element_exist(driver, By.XPATH, "//button[@name='SystemDefinedNewButton']")):
                Interactions.wait_and_click(driver, By.XPATH, "//button[@name='SystemDefinedNewButton']")
            elif(Interactions.check_element_exist(driver, By.XPATH, "//button[@data-dyn-controlname='SystemDefinedNewButton']")):
                Interactions.wait_and_click(driver, By.XPATH, "//button[@data-dyn-controlname='SystemDefinedNewButton']")
    # Inputting into: PurchTable_OrderAccount
            if(Interactions.check_input_ancestor_is_table(driver, By.XPATH, "//input[contains(@name,'PurchTable_OrderAccount')]") or Interactions.check_input_ancestor_is_table(driver, By.XPATH, "//input[contains(@aria-label,'Vendor account')]") ):
                #clicking inside grid: PurchTable_OrderAccount
                if(Interactions.check_element_exist(driver, By.XPATH, "(//input[contains(@name,'PurchTable_OrderAccount')])[1]")):
                    actions.move_to_element(driver.find_element(By.XPATH,"//input[contains(@name,'PurchTable_OrderAccount')]")).perform()
                    Interactions.clear_input_field_and_send_keys(driver, By.XPATH, "(//input[contains(@name,'PurchTable_OrderAccount')])[1]", "1001")
                elif(Interactions.check_element_exist(driver, By.XPATH, "(//input[contains(@aria-label,'Vendor account')])[1]")):
                    actions.move_to_element(driver.find_element(By.XPATH, "//input[contains(@aria-label,'Vendor account')]")).perform()
                    Interactions.clear_input_field_and_send_keys(driver, By.XPATH, "(//input[contains(@aria-label,'Vendor account')])[1]", "1001")
            else:
                if(Interactions.check_element_exist(driver, By.XPATH, "//input[contains(@name,'PurchTable_OrderAccount')]")):
                    Interactions.clear_input_field_and_send_keys(driver, By.XPATH, "//input[contains(@name,'PurchTable_OrderAccount')]", "1001")
                elif(Interactions.check_element_exist(driver, By.XPATH, "//input[contains(@aria-label,'Vendor account')]")):
                    Interactions.clear_input_field_and_send_keys(driver, By.XPATH, "//input[contains(@aria-label,'Vendor account')]", "1001")
            Interactions.press_enter(driver, By.XPATH, "//body")
    #    "Skipping grid since previous was control was input"
            if(Interactions.check_element_exist(driver, By.XPATH, "//button[@name='OK']")):
                Interactions.wait_and_click(driver, By.XPATH, "//button[@name='OK']")
            elif(Interactions.check_element_exist(driver, By.XPATH, "//button[@data-dyn-controlname='OK']")):
                Interactions.wait_and_click(driver, By.XPATH, "//button[@data-dyn-controlname='OK']")
    #    "Skipping grid since it is deafault behavior of d365"
    # Inputting into: PurchLine_ItemId
            if(Interactions.check_input_ancestor_is_table(driver, By.XPATH, "//input[contains(@name,'PurchLine_ItemId')]") or Interactions.check_input_ancestor_is_table(driver, By.XPATH, "//input[contains(@aria-label,'Item number')]") ):
                #clicking inside grid: PurchLine_ItemId
                if(Interactions.check_element_exist(driver, By.XPATH, "(//input[contains(@name,'PurchLine_ItemId')])[1]")):
                    actions.move_to_element(driver.find_element(By.XPATH,"//input[contains(@name,'PurchLine_ItemId')]")).perform()
                    Interactions.clear_input_field_and_send_keys(driver, By.XPATH, "(//input[contains(@name,'PurchLine_ItemId')])[1]", "0002")
                elif(Interactions.check_element_exist(driver, By.XPATH, "(//input[contains(@aria-label,'Item number')])[1]")):
                    actions.move_to_element(driver.find_element(By.XPATH, "//input[contains(@aria-label,'Item number')]")).perform()
                    Interactions.clear_input_field_and_send_keys(driver, By.XPATH, "(//input[contains(@aria-label,'Item number')])[1]", "0002")
            else:
                if(Interactions.check_element_exist(driver, By.XPATH, "//input[contains(@name,'PurchLine_ItemId')]")):
                    Interactions.clear_input_field_and_send_keys(driver, By.XPATH, "//input[contains(@name,'PurchLine_ItemId')]", "0002")
                elif(Interactions.check_element_exist(driver, By.XPATH, "//input[contains(@aria-label,'Item number')]")):
                    Interactions.clear_input_field_and_send_keys(driver, By.XPATH, "//input[contains(@aria-label,'Item number')]", "0002")
            Interactions.press_enter(driver, By.XPATH, "//body")
    #    "Skipping grid since previous was control was input"
    #    "Skipping grid selection due input in the ancestor"
            Interactions.wait_and_click(driver, By.XPATH, "//button[@name='SystemDefinedSaveButton']")
            assert True
        except Exception as e:
            base.test_passed = False
&gt;           raise e

tests\hello_test.py:171: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests\hello_test.py:23: in test
    user_input = input("Press data to select: ")
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;_pytest.capture.DontReadFromInput object at 0x000002734947A000&gt;, size = -1

    def read(self, size: int = -1) -&gt; str:
&gt;       raise OSError(
            "pytest: reading from stdin while output is captured!  Consider using `-s`."
        )
E       OSError: pytest: reading from stdin while output is captured!  Consider using `-s`.

..\..\..\..\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\_pytest\capture.py:229: OSError</failure></testcase></testsuite></testsuites>