{"name": "test", "status": "failed", "statusDetails": {"message": "AssertionError: mismatch.\nExpected: ['Procurement and sourcing', 'Vendor', 'All vendors']\nFound: ['Procurement and sourcing', 'Vendors', 'All vendors']", "trace": "@pytest.mark.ui\n    def test():\n        base = BaseTest(\"user1\",incognito=True)\n        driver = base.driver\n        actions = base.actions\n        recorder=ScreenRecorder()\n        try:\n            recorder.start()\n            Interactions.wait_and_click(driver, By.XPATH, \"//div[@aria-label='Modules']\")\n    # Clicking navigation: Procurement and sourcing\n            nav1 = Interactions.click_nav(driver, By.XPATH, \"//a[@data-dyn-title='Procurement and sourcing']\")\n    # Clicking navigation: Vendors\n            nav2 = Interactions.click_nav(driver, By.XPATH, \"//a[@data-dyn-title='Vendors']\")\n    # Clicking navigation: All vendors\n            base.steps_count +=1\n            nav3 = Interactions.click_nav(driver, By.XPATH, \"//a[@data-dyn-title='All vendors']\",base.steps_count, \"Go to Procurement and sourcing > Vendors > All vendors.\")\n            time.sleep(3)\n            Interactions.assert_navigation(driver,nav1, \"Vendor\", nav3)\n    #         base.steps_count +=1\n    #         user_input = input(\"Press data to select: \")\n    #         Interactions.scroll_and_click_row(driver, By.XPATH, \"//div[contains(@class,'fixedDataTableRowLayout_')]/ancestor::div[@role='grid']\", f\"//input[@value='{user_input}']/ancestor::div[@class='fixedDataTableRowLayout_body']/div[1]//div[@role='checkbox']\", base.steps_count,\"In the list, find and select the desired record.\")\n    #         base.steps_count +=1\n    #         Interactions.press_enter(driver, By.XPATH, \"//input[@value='\"+user_input+\"']\")\n    #         base.steps_count +=1\n    # # Clicking (default) on: VendorTab\n    #         time.sleep(3)\n    #         Interactions.wait_and_click(driver, By.XPATH, \"//button/parent::div[@data-dyn-controlname='VendorTab']\",base.steps_count,\"On the Action Pane, click Vendor.\")\n    #         base.steps_count +=1\n    #         if(Interactions.check_element_exist(driver, By.XPATH, \"//button[@name='OnHoldDropDialogButton']\")):\n    #             Interactions.wait_and_click(driver, By.XPATH, \"//button[@name='OnHoldDropDialogButton']\",base.steps_count,\"Click On hold to open the drop dialog.\")\n    #         elif(Interactions.check_element_exist(driver, By.XPATH, \"//button[@data-dyn-controlname='OnHoldDropDialogButton']\")):\n    #             Interactions.wait_and_click(driver, By.XPATH, \"//button[@data-dyn-controlname='OnHoldDropDialogButton']\",base.steps_count,\"Click On hold to open the drop dialog.\")\n    #         elif(Interactions.check_element_exist(driver, By.XPATH, \"//button[@aria-label='On hold']\")):\n    #             Interactions.wait_and_click(driver, By.XPATH, \"//button[@aria-label='On hold']\",base.steps_count,\"Click On hold to open the drop dialog.\")\n    #         else:\n    #             Interactions.wait_and_click(driver, By.XPATH, \"//div[@data-dyn-controlname='ActionPane']//div[@class='appBar-toolbar']//div[@data-dyn-role='OverflowButton']\")\n    #             if(Interactions.check_element_exist(driver, By.XPATH, \"//div[@class='overflow-menu sysPopup allowFlyoutClickPropagation']//button[@name='OnHoldDropDialogButton']\")):\n    #                 Interactions.wait_and_click(driver, By.XPATH, \"//div[@class='overflow-menu sysPopup allowFlyoutClickPropagation']//button[@name='OnHoldDropDialogButton']\",base.steps_count,\"Click On hold to open the drop dialog.\")\n    #             elif(Interactions.check_element_exist(driver, By.XPATH, \"//div[@class='overflow-menu sysPopup allowFlyoutClickPropagation']//button[@aria-label='On hold']\")):\n    #                 Interactions.wait_and_click(driver, By.XPATH, \"//div[@class='overflow-menu sysPopup allowFlyoutClickPropagation']//button[@aria-label='On hold']\",base.steps_count,\"Click On hold to open the drop dialog.\")\n    #         base.steps_count +=1\n    # # Clicking combobox: OnHold\n    #         combox_box_to_click = None\n    #         if Interactions.check_element_exist(driver, By.XPATH, \"//input[@name='OnHold']/following-sibling::div\"):\n    #             combox_box_to_click = \"//input[@name='OnHold']/following-sibling::div\"\n    #         elif Interactions.check_element_exist(driver, By.XPATH, \"//input[@aria-label='Vendor hold']/following-sibling::div\"):\n    #             combox_box_to_click = \"//input[@aria-label='Vendor hold']/following-sibling::div\"\n    #         elif Interactions.check_element_exist(driver, By.XPATH, \"//input[@name='OnHold']/parent::div/following-sibling::div/div\"):\n    #             combox_box_to_click = \"//input[@name='OnHold']/parent::div/following-sibling::div/div\"\n    #         Interactions.wait_and_click(driver, By.XPATH, combox_box_to_click)\n    #         if Interactions.check_element_exist(driver, By.XPATH, \"//ul[contains(@aria-labelledby, 'OnHold')]//li[@data-dyn-index='1']\"):\n    #             Interactions.wait_and_click(driver, By.XPATH, \"//ul[contains(@aria-labelledby, 'OnHold')]//li[@data-dyn-index='1']\", base.steps_count,\"In the Vendor hold field, select an option.\")\n    #         elif Interactions.check_element_exist(driver, By.XPATH, \"//ul[contains(@id,'OnHold')]//li[1]\"):\n    #             Interactions.wait_and_click(driver, By.XPATH, \"//ul[contains(@id,'OnHold')]//li[1]\",base.steps_count,\"In the Vendor hold field, select an option.\")\n    #         else:\n    #             if Interactions.check_element_exist(driver, By.XPATH, \"//ul[contains(@aria-labelledby, 'OnHold')]\"):\n    #                 cliked_or_not = Interactions.scroll_and_click_dropdown_item(driver, \"//ul[contains(@aria-labelledby, 'OnHold')]\",By.XPATH, \"//ul[contains(@aria-labelledby, 'OnHold')]//li[@data-dyn-index='1']\", base.steps_count,\"In the Vendor hold field, select an option.\")\n    #                 if cliked_or_not == False:\n    #                     Interactions.scroll_and_click_dropdown_item(driver, \"//ul[contains(@aria-labelledby, 'OnHold')]\",By.XPATH, \"//ul[contains(@id,'OnHold')]//li[1]\", base.steps_count)\n    #             elif Interactions.check_element_exist(driver, By.XPATH, \"//ul[contains(@id, 'OnHold')]\"):\n    #                 cliked_or_not = Interactions.scroll_and_click_dropdown_item(driver, \"//ul[contains(@id, 'OnHold')]\",By.XPATH, \"//ul[contains(@aria-labelledby, 'OnHold')]//li[@data-dyn-index='1']\",base.steps_count,\"In the Vendor hold field, select an option.\")\n    #                 if cliked_or_not == False:\n    #                     Interactions.scroll_and_click_dropdown_item(driver, \"//ul[contains(@id, 'OnHold')]\",By.XPATH, \"//ul[contains(@id,'OnHold')]//li[1]\", base.steps_count,\"In the Vendor hold field, select an option.\")\n    #         base.steps_count +=1\n    # # Inputting into: ReasonCode\n    #         if(Interactions.check_input_ancestor_is_table(driver, By.XPATH, \"//input[contains(@name,'ReasonCode')]\") or Interactions.check_input_ancestor_is_table(driver, By.XPATH, \"//input[contains(@aria-label,'Reason code')]\") ):\n    #             #clicking inside grid: ReasonCode\n    #             if(Interactions.check_element_exist(driver, By.XPATH, \"(//input[contains(@name,'ReasonCode')])[1]\")):\n    #                 actions.move_to_element(driver.find_element(By.XPATH,\"//input[contains(@name,'ReasonCode')]\")).perform()\n    #                 Interactions.clear_input_field_and_send_keys(driver, By.XPATH, \"(//input[contains(@name,'ReasonCode')])[1]\", \"\",base.steps_count,\"In the Reason code field, enter or select a value.\")\n    #             elif(Interactions.check_element_exist(driver, By.XPATH, \"(//input[contains(@aria-label,'Reason code')])[1]\")):\n    #                 actions.move_to_element(driver.find_element(By.XPATH, \"//input[contains(@aria-label,'Reason code')]\")).perform()\n    #                 Interactions.clear_input_field_and_send_keys(driver, By.XPATH, \"(//input[contains(@aria-label,'Reason code')])[1]\", \"\",base.steps_count,\"In the Reason code field, enter or select a value.\")\n    #         else:\n    #             if(Interactions.check_element_exist(driver, By.XPATH, \"//input[contains(@name,'ReasonCode')]\")):\n    #                 Interactions.clear_input_field_and_send_keys(driver, By.XPATH, \"//input[contains(@name,'ReasonCode')]\", \"\",base.steps_count,\"In the Reason code field, enter or select a value.\")\n    #             elif(Interactions.check_element_exist(driver, By.XPATH, \"//input[contains(@aria-label,'Reason code')]\")):\n    #                 Interactions.clear_input_field_and_send_keys(driver, By.XPATH, \"//input[contains(@aria-label,'Reason code')]\", \"\",base.steps_count,\"In the Reason code field, enter or select a value.\")\n    #         Interactions.press_enter(driver, By.XPATH, \"//body\")\n    #         base.steps_count +=1\n    # # Clicking button: Grid\n    #         user_input = input(\"Press data to select: \")\n    #         Interactions.scroll_and_click_row(driver, By.XPATH, \"//div[contains(@class,'fixedDataTableRowLayout_')]/ancestor::div[@role='grid']\", f\"//input[@value='{user_input}']\", base.steps_count,\"In the list, select row 4.\")\n    #         Interactions.press_enter(driver, By.XPATH, \"//input[@value='\"+user_input+\"']\")\n    #         base.steps_count +=1\n    # #    \"Skipping grid selection due input in the ancestor\"\n    #         base.steps_count +=1\n    #         if(Interactions.check_element_exist(driver, By.XPATH, \"//button[@name='CommandButtonOK']\")):\n    #             Interactions.wait_and_click(driver, By.XPATH, \"//button[@name='CommandButtonOK']\",base.steps_count, \"Click OK.\")\n    #         elif(Interactions.check_element_exist(driver, By.XPATH, \"//button[@data-dyn-controlname='CommandButtonOK']\")):\n    #             Interactions.wait_and_click(driver, By.XPATH, \"//button[@data-dyn-controlname='CommandButtonOK']\",base.steps_count,\"Click OK.\")\n    # # Clicking the form caption\n    #         Interactions.wait_and_click(driver, By.XPATH, \"//span[@class='formCaption link-content-validLink']\")\n    # # Closing the page\n    #         base.steps_count +=1\n    #         Interactions.click_back_button(driver, By.XPATH, \"//button[@data-dyn-controlname='SystemDefinedCloseButton']\", base.steps_count)\n    #         time.sleep(1)\n    #         Interactions.wait_and_click(driver, By.XPATH, \"//div[@aria-label='Modules']\")\n    # # Clicking navigation: Procurement and sourcing\n    #         nav1 = Interactions.click_nav(driver, By.XPATH, \"//a[@data-dyn-title='Procurement and sourcing']\")\n    # # Clicking navigation: Purchase orders\n    #         nav2 = Interactions.click_nav(driver, By.XPATH, \"//a[@data-dyn-title='Purchase orders']\")\n    # # Clicking navigation: All purchase orders\n    #         base.steps_count +=1\n    #         nav3 = Interactions.click_nav(driver, By.XPATH, \"//a[@data-dyn-title='All purchase orders']\",base.steps_count, \"Go to Procurement and sourcing > Purchase orders > All purchase orders.\")\n    #         time.sleep(3)\n    #         Interactions.assert_navigation(driver,nav1, nav2, nav3)\n    #         base.steps_count +=1\n    #         if(Interactions.check_element_exist(driver, By.XPATH, \"//button[@name='SystemDefinedNewButton']\")):\n    #             Interactions.wait_and_click(driver, By.XPATH, \"//button[@name='SystemDefinedNewButton']\",base.steps_count, \"Click New.\")\n    #         elif(Interactions.check_element_exist(driver, By.XPATH, \"//button[@data-dyn-controlname='SystemDefinedNewButton']\")):\n    #             Interactions.wait_and_click(driver, By.XPATH, \"//button[@data-dyn-controlname='SystemDefinedNewButton']\",base.steps_count,\"Click New.\")\n    #         base.steps_count +=1\n    # # Inputting into: PurchTable_OrderAccount\n    #         if(Interactions.check_input_ancestor_is_table(driver, By.XPATH, \"//input[contains(@name,'PurchTable_OrderAccount')]\") or Interactions.check_input_ancestor_is_table(driver, By.XPATH, \"//input[contains(@aria-label,'Vendor account')]\") ):\n    #             #clicking inside grid: PurchTable_OrderAccount\n    #             if(Interactions.check_element_exist(driver, By.XPATH, \"(//input[contains(@name,'PurchTable_OrderAccount')])[1]\")):\n    #                 actions.move_to_element(driver.find_element(By.XPATH,\"//input[contains(@name,'PurchTable_OrderAccount')]\")).perform()\n    #                 Interactions.clear_input_field_and_send_keys(driver, By.XPATH, \"(//input[contains(@name,'PurchTable_OrderAccount')])[1]\", \"\",base.steps_count,\"In the Vendor account field, enter or select a value.\")\n    #             elif(Interactions.check_element_exist(driver, By.XPATH, \"(//input[contains(@aria-label,'Vendor account')])[1]\")):\n    #                 actions.move_to_element(driver.find_element(By.XPATH, \"//input[contains(@aria-label,'Vendor account')]\")).perform()\n    #                 Interactions.clear_input_field_and_send_keys(driver, By.XPATH, \"(//input[contains(@aria-label,'Vendor account')])[1]\", \"\",base.steps_count,\"In the Vendor account field, enter or select a value.\")\n    #         else:\n    #             if(Interactions.check_element_exist(driver, By.XPATH, \"//input[contains(@name,'PurchTable_OrderAccount')]\")):\n    #                 Interactions.clear_input_field_and_send_keys(driver, By.XPATH, \"//input[contains(@name,'PurchTable_OrderAccount')]\", \"\",base.steps_count,\"In the Vendor account field, enter or select a value.\")\n    #             elif(Interactions.check_element_exist(driver, By.XPATH, \"//input[contains(@aria-label,'Vendor account')]\")):\n    #                 Interactions.clear_input_field_and_send_keys(driver, By.XPATH, \"//input[contains(@aria-label,'Vendor account')]\", \"\",base.steps_count,\"In the Vendor account field, enter or select a value.\")\n    #         Interactions.press_enter(driver, By.XPATH, \"//body\")\n    #         base.steps_count +=1\n    # # Clicking button: Grid\n    #         user_input = input(\"Press data to select: \")\n    #         Interactions.scroll_and_click_row(driver, By.XPATH, \"//div[contains(@class,'fixedDataTableRowLayout_')]/ancestor::div[@role='grid']\", f\"//input[@value='{user_input}']\", base.steps_count,\"In the list, select row 10.\")\n    #         Interactions.press_enter(driver, By.XPATH, \"//input[@value='\"+user_input+\"']\")\n    #         base.steps_count +=1\n    # #    \"Skipping grid selection due input in the ancestor\"\n    #         base.steps_count +=1\n    #         if(Interactions.check_element_exist(driver, By.XPATH, \"//button[@name='OK']\")):\n    #             Interactions.wait_and_click(driver, By.XPATH, \"//button[@name='OK']\",base.steps_count, \"Click OK.\")\n    #         elif(Interactions.check_element_exist(driver, By.XPATH, \"//button[@data-dyn-controlname='OK']\")):\n    #             Interactions.wait_and_click(driver, By.XPATH, \"//button[@data-dyn-controlname='OK']\",base.steps_count,\"Click OK.\")\n    #         base.steps_count +=1\n    #         base.steps_count +=1\n    #         Interactions.wait_and_click(driver, By.XPATH, \"//button[@name='SystemDefinedSaveButton']\",base.steps_count, \"Click Save.\")\n    # # Clicking the form caption\n    #         Interactions.wait_and_click(driver, By.XPATH, \"//span[@class='formCaption link-content-validLink']\")\n            assert True\n        except Exception as e:\n            base.test_passed = False\n>           raise e\n\ntests\\script_Invoice Hold_test.py:158: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests\\script_Invoice Hold_test.py:27: in test\n    Interactions.assert_navigation(driver,nav1, \"Vendor\", nav3)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"24530fe56bffce61d8d0b4d3f9ee3009\")>\nexpected_items = ('Procurement and sourcing', 'Vendor', 'All vendors'), navigation_xpath = \"//ol[@class='navigationBar-crumbList']//li\"\nnavigated_items = [<selenium.webdriver.remote.webelement.WebElement (session=\"24530fe56bffce61d8d0b4d3f9ee3009\", element=\"f.03A906BCBC24...0fe56bffce61d8d0b4d3f9ee3009\", element=\"f.03A906BCBC24111430AB32969D07E0B6.d.4A8C38B7A7820A18BF90038841D59907.e.258\")>]\nnavigated_items_texts = ['Procurement and sourcing', 'Vendors', 'All vendors']\n\n    def assert_navigation(driver, *expected_items):\n        navigation_xpath = \"//ol[@class='navigationBar-crumbList']//li\"\n        navigated_items = driver.find_elements(By.XPATH, navigation_xpath)\n    \n        navigated_items_texts = [item.text.strip() for item in navigated_items]\n        print(f\"Navigation found: {navigated_items_texts}\")\n    \n        expected_path = list(expected_items)\n        actual_path = navigated_items_texts[-len(expected_path):]\n    \n        if len(navigated_items_texts) < len(expected_path):\n            take_screenshot_on_failure(driver)\n            raise AssertionError(f\"Not enough navigation items found.\\nExpected at least {len(expected_path)}, got {len(navigated_items_texts)}\\nNavigation: {navigated_items_texts}\")\n    \n        if expected_path != actual_path:\n            take_screenshot_on_failure(driver)\n>           raise AssertionError(f\"mismatch.\\nExpected: {expected_path}\\nFound: {actual_path}\")\nE           AssertionError: mismatch.\nE           Expected: ['Procurement and sourcing', 'Vendor', 'All vendors']\nE           Found: ['Procurement and sourcing', 'Vendors', 'All vendors']\n\nUtils\\Interactions.py:721: AssertionError"}, "attachments": [{"name": "stdout", "source": "219aafa5-0432-4648-bade-dc48fb374133-attachment.txt", "type": "text/plain"}], "start": 1751893143167, "stop": 1751893184561, "uuid": "4c8ece3e-6298-43ab-93c5-912a647d40a1", "historyId": "825c712b8765daaa418c7328f09be629", "testCaseId": "825c712b8765daaa418c7328f09be629", "fullName": "tests.script_Invoice Hold_test#test", "labels": [{"name": "tag", "value": "ui"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "script_Invoice Hold_test"}, {"name": "host", "value": "PSDLAP376"}, {"name": "thread", "value": "3216-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.script_Invoice Hold_test"}]}